// Code generated by MockGen. DO NOT EDIT.
// Source: summarize (interfaces: Summarize)

// Package summarize is a generated GoMock package.
package summarize

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSummarize is a mock of Summarize interface.
type MockSummarize struct {
	ctrl     *gomock.Controller
	recorder *MockSummarizeMockRecorder
}

// MockSummarizeMockRecorder is the mock recorder for MockSummarize.
type MockSummarizeMockRecorder struct {
	mock *MockSummarize
}

// NewMockSummarize creates a new mock instance.
func NewMockSummarize(ctrl *gomock.Controller) *MockSummarize {
	mock := &MockSummarize{ctrl: ctrl}
	mock.recorder = &MockSummarizeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSummarize) EXPECT() *MockSummarizeMockRecorder {
	return m.recorder
}

// Summarize mocks base method.
func (m *MockSummarize) Summarize(arg0, arg1 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Summarize", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// Summarize indicates an expected call of Summarize.
func (mr *MockSummarizeMockRecorder) Summarize(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Summarize", reflect.TypeOf((*MockSummarize)(nil).Summarize), arg0, arg1)
}
